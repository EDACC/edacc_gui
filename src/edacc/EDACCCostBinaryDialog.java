/*
 * EDACCSolverBinaryDlg.java
 *
 * Created on 09.05.2011, 19:26:38
 */
package edacc;

import edacc.manageDB.CostBinaryListModel;
import edacc.manageDB.ManageDBCosts;
import edacc.model.Cost;
import edacc.model.CostBinary;
import java.awt.Frame;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author simon, adapted from dgall (EDACCSolverBinariesDlg)
 */
public class EDACCCostBinaryDialog extends javax.swing.JDialog {
    
    public enum DialogMode {
        
        CREATE_MODE, EDIT_MODE
    };
    private CostBinary costBinary;
    private CostBinary workingCopy;
    private ManageDBCosts controller;
    private DialogMode mode;

    /** Creates new form EDACCSolverBinaryDlg */
    public EDACCCostBinaryDialog(Frame parent, CostBinary costBinary, ManageDBCosts controller, DialogMode mode) throws SQLException {
        super(parent, true);
        this.costBinary = costBinary;
        this.workingCopy = new CostBinary(costBinary);
        this.controller = controller;
        this.mode = mode;
        setLocationRelativeTo(parent);
        initComponents();
        lbRunPath.setSelectedIndex(0);
        updateCosts();
        showSolverBin();
    }
    
    private void updateCosts() throws SQLException {
        Object sel = comboCost.getSelectedItem();
        String selName = null;
        if (sel instanceof Cost) {
            selName = ((Cost) sel).getName();
        }
        controller.reload();
        Cost selCost = null;
        comboCost.removeAllItems();
        for (Cost c : controller.getCosts()) {
            comboCost.addItem(c);
            if (selName != null && selName.equals(c.getName())) {
                selCost = c;
            }
        }
        if (selCost != null) {
            comboCost.setSelectedItem(selCost);
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lBinaryName = new javax.swing.JLabel();
        lRunCommand = new javax.swing.JLabel();
        lRunPath = new javax.swing.JLabel();
        tfBinaryName = new javax.swing.JTextField();
        tfRunCommand = new javax.swing.JTextField();
        lCommand = new javax.swing.JLabel();
        lCommandPreview = new javax.swing.JLabel();
        bAddBinary = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        lCaption = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbRunPath = new javax.swing.JList();
        lVersion = new javax.swing.JLabel();
        tfVersion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfParameters = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboCost = new javax.swing.JComboBox();
        btnManageCosts = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(EDACCCostBinaryDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N

        lBinaryName.setText(resourceMap.getString("lBinaryName.text")); // NOI18N
        lBinaryName.setName("lBinaryName"); // NOI18N

        lRunCommand.setText(resourceMap.getString("lRunCommand.text")); // NOI18N
        lRunCommand.setName("lRunCommand"); // NOI18N

        lRunPath.setText(resourceMap.getString("lRunPath.text")); // NOI18N
        lRunPath.setName("lRunPath"); // NOI18N

        tfBinaryName.setText(resourceMap.getString("tfBinaryName.text")); // NOI18N
        tfBinaryName.setName("tfBinaryName"); // NOI18N

        tfRunCommand.setText(resourceMap.getString("tfRunCommand.text")); // NOI18N
        tfRunCommand.setName("tfRunCommand"); // NOI18N
        tfRunCommand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfRunCommandChanged(evt);
            }
        });

        lCommand.setText(resourceMap.getString("lCommand.text")); // NOI18N
        lCommand.setName("lCommand"); // NOI18N

        lCommandPreview.setText(resourceMap.getString("lCommandPreview.text")); // NOI18N
        lCommandPreview.setName("lCommandPreview"); // NOI18N

        bAddBinary.setText(resourceMap.getString("bAddBinary.text")); // NOI18N
        bAddBinary.setName("bAddBinary"); // NOI18N
        bAddBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBinary(evt);
            }
        });

        bCancel.setText(resourceMap.getString("bCancel.text")); // NOI18N
        bCancel.setName("bCancel"); // NOI18N
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        lCaption.setFont(resourceMap.getFont("lCaption.font")); // NOI18N
        lCaption.setText(resourceMap.getString("lCaption.text")); // NOI18N
        lCaption.setName("lCaption"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lbRunPath.setModel(new CostBinaryListModel(costBinary));
        lbRunPath.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lbRunPath.setName("lbRunPath"); // NOI18N
        lbRunPath.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lbRuntPathChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lbRunPath);

        lVersion.setText(resourceMap.getString("lVersion.text")); // NOI18N
        lVersion.setName("lVersion"); // NOI18N

        tfVersion.setText(resourceMap.getString("tfVersion.text")); // NOI18N
        tfVersion.setName("tfVersion"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        tfParameters.setText(resourceMap.getString("tfParameters.text")); // NOI18N
        tfParameters.setName("tfParameters"); // NOI18N
        tfParameters.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfParametersKeyReleased(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        comboCost.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCost.setName("comboCost"); // NOI18N

        btnManageCosts.setText(resourceMap.getString("btnManageCosts.text")); // NOI18N
        btnManageCosts.setName("btnManageCosts"); // NOI18N
        btnManageCosts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCostsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lCaption)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 476, Short.MAX_VALUE)
                        .addComponent(bAddBinary))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lRunCommand)
                            .addComponent(lBinaryName)
                            .addComponent(lRunPath)
                            .addComponent(lCommand)
                            .addComponent(lVersion)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnManageCosts))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(tfVersion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(tfBinaryName, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(lCommandPreview, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(tfRunCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(tfParameters, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBinaryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lBinaryName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lRunPath)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRunCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lRunCommand))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCommandPreview)
                    .addComponent(lCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lVersion)
                    .addComponent(tfVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageCosts))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancel)
                    .addComponent(bAddBinary))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBinary(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBinary
        costBinary.setBinaryName(tfBinaryName.getText());
        costBinary.setParameters(tfParameters.getText());
        
        if (comboCost.getSelectedItem() instanceof Cost) {
            costBinary.setCost((Cost) comboCost.getSelectedItem());
        } else {
            // TODO: error
            return;
        }
        
        costBinary.setRunCommand(tfRunCommand.getText());
        costBinary.setRunPath((String) lbRunPath.getModel().getElementAt(lbRunPath.getSelectedIndex()));
        costBinary.setVersion(tfVersion.getText());
        try {
            if (mode == DialogMode.CREATE_MODE) {
                // in create mode: add the binary to the solver, in edit mode, do nothing
                controller.addCostBinary(costBinary);
            }
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occured while adding Solver Binary: \n" + ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addBinary
    
    private void tfRunCommandChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRunCommandChanged
        updateRunCommandLine();
    }//GEN-LAST:event_tfRunCommandChanged
    
    private void lbRuntPathChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lbRuntPathChanged
        updateRunCommandLine();
    }//GEN-LAST:event_lbRuntPathChanged
    
    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        if (mode == DialogMode.EDIT_MODE) {
            // reset object to working copy (status before editing)
            costBinary.setAll(workingCopy);
        }
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed
    
    private void tfParametersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfParametersKeyReleased
        updateRunCommandLine();
    }//GEN-LAST:event_tfParametersKeyReleased
    
    private void btnManageCostsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCostsActionPerformed
        try {
            EDACCManageCostDialog dialog = new EDACCManageCostDialog(EDACCApp.getApplication().getMainFrame(), true, controller);
            dialog.setName("EDACCManageCostDialog");
            EDACCApp.getApplication().show(dialog);
            updateCosts();
        } catch (SQLException ex) {
            // TODO: error
        }
    }//GEN-LAST:event_btnManageCostsActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddBinary;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton btnManageCosts;
    private javax.swing.JComboBox comboCost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lBinaryName;
    private javax.swing.JLabel lCaption;
    private javax.swing.JLabel lCommand;
    private javax.swing.JLabel lCommandPreview;
    private javax.swing.JLabel lRunCommand;
    private javax.swing.JLabel lRunPath;
    private javax.swing.JLabel lVersion;
    private javax.swing.JList lbRunPath;
    private javax.swing.JTextField tfBinaryName;
    private javax.swing.JTextField tfParameters;
    private javax.swing.JTextField tfRunCommand;
    private javax.swing.JTextField tfVersion;
    // End of variables declaration//GEN-END:variables

    private void updateRunCommandLine() {
        String parameters = tfParameters.getText();
        String runCommand = tfRunCommand.getText();
        String runPath = (String) lbRunPath.getModel().getElementAt(lbRunPath.getSelectedIndex());
        String command = ("".equals(runCommand) ? "" : runCommand + " ") + runPath + ("".equals(parameters) ? "" : " " + parameters);
        lCommandPreview.setText(command);
    }
    
    private void showSolverBin() {
        if (costBinary == null) {
            return;
        }
        tfBinaryName.setText(costBinary.getBinaryName());
        tfRunCommand.setText(costBinary.getRunCommand());
        tfVersion.setText(costBinary.getVersion());
        int selectedIndex = ((CostBinaryListModel) lbRunPath.getModel()).getIndexOf(costBinary.getRunPath());
        // if an error occured select first index
        if (selectedIndex < 0) {
            selectedIndex = 0;
        }
        lbRunPath.setSelectedIndex(selectedIndex);
        if (mode == DialogMode.CREATE_MODE) {
            this.setTitle("Add Solver Binary");
            bAddBinary.setText("Add Binary");
        } else if (mode == DialogMode.EDIT_MODE) {
            this.setTitle("Edit Solver Binary");
            bAddBinary.setText("Edit Binary");
        }
    }
}
