/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportParametersOfSolver.java
 *
 * Created on 24.11.2011, 13:14:05
 */

package edacc;

import edacc.manageDB.ManageDBParameters;
import edacc.manageDB.SolverListModel;
import edacc.model.Parameter;
import edacc.model.ParameterDAO;
import edacc.model.Solver;
import edacc.model.SolverDAO;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author dgall
 */
public class ImportParametersOfSolverDlg extends javax.swing.JDialog {

    private Solver currentSolver;
    private SolverListModel solverListModel;
    private ManageDBParameters manageDBParameters;

    /** Creates new form ImportParametersOfSolver */
    public ImportParametersOfSolverDlg(java.awt.Frame parent, ManageDBParameters manageDBParameters, Solver currentSolver) {
        super(parent, "Import parameters of solver", true);
        try {
            this.manageDBParameters = manageDBParameters;
            this.solverListModel = new SolverListModel(SolverDAO.getAll());
            this.solverListModel.removeSolver(currentSolver);
            this.currentSolver = currentSolver;
            initComponents();
            this.setLocationRelativeTo(parent);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occured while loading solver list: \n" + ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Edit/ TODO add your handling code here:or.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lChooseSolver = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSolvers = new javax.swing.JList();
        bImport = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(ImportParametersOfSolverDlg.class);
        lChooseSolver.setText(resourceMap.getString("lChooseSolver.text")); // NOI18N
        lChooseSolver.setName("lChooseSolver"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listSolvers.setModel(solverListModel);
        listSolvers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listSolvers.setName("listSolvers"); // NOI18N
        jScrollPane1.setViewportView(listSolvers);

        bImport.setText(resourceMap.getString("bImport.text")); // NOI18N
        bImport.setName("bImport"); // NOI18N
        bImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImportActionPerformed(evt);
            }
        });

        bCancel.setText(resourceMap.getString("bCancel.text")); // NOI18N
        bCancel.setName("bCancel"); // NOI18N
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(lChooseSolver)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(bCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lChooseSolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bImport)
                    .addComponent(bCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bImportActionPerformed
        Solver s = (Solver) listSolvers.getSelectedValue();
        try {
            for (Parameter p : ParameterDAO.getParameterFromSolverId(s.getId())) {
                Parameter np = manageDBParameters.addParameter(currentSolver);
                np.setIdSolver(currentSolver.getId());
                np.setName(p.getName());
                np.setAttachToPrevious(p.isAttachToPrevious());
                np.setDefaultValue(p.getDefaultValue());
                np.setHasValue(p.getHasValue());
                np.setMandatory(p.isMandatory());
                np.setOrder(p.getOrder());
                np.setPrefix(p.getPrefix());
                np.setSpace(p.getSpace());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occured while loading solver list: \n" + ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        } finally {
            this.dispose();
        }
    }//GEN-LAST:event_bImportActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bImport;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lChooseSolver;
    private javax.swing.JList listSolvers;
    // End of variables declaration//GEN-END:variables

}
