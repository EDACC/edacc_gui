/*
 * EDACCGenerateJobsFilter.java
 *
 * Created on 31.01.2012, 17:16:09
 */
package edacc;

import edacc.experiment.GenerateJobsTableModel;
import java.awt.event.KeyEvent;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.RowFilter.Entry;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author simon
 */
public class EDACCGenerateJobsFilter extends javax.swing.JDialog {

    private JTable table;
    private GenerateJobsTableModel model;
    private String instanceRegex;
    private String solverConfigRegex;

    /** Creates new form EDACCGenerateJobsFilter */
    public EDACCGenerateJobsFilter(java.awt.Frame parent, boolean modal, JTable table, GenerateJobsTableModel model) {
        super(parent, modal);
        initComponents();

        this.table = table;
        this.model = model;
        TableRowSorter<? extends TableModel> rowSorter = (TableRowSorter<? extends TableModel>) table.getRowSorter();
        final RowFilter oldRowFilter = rowSorter.getRowFilter();
        RowFilter rowFilter = new RowFilter<Object, Object>() {

            @Override
            public boolean include(Entry<? extends Object, ? extends Object> entry) {
                return (oldRowFilter == null || oldRowFilter.include(entry)) && EDACCGenerateJobsFilter.this.include(entry);
            }
        };
        rowSorter.setRowFilter(rowFilter);
        instanceRegex = ".*";
        solverConfigRegex = ".*";
    }

    public boolean include(Entry<? extends Object, ? extends Object> entry) {
        Object value = entry.getValue(0);
        String val;
        if (value instanceof String) {
            val = (String) value;
        } else {
            val = value.toString();
        }
        try {
            return val.matches(instanceRegex);
        } catch (Exception e) {
            return false;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSolverConfigRegex = new javax.swing.JTextField();
        txtInstanceRegex = new javax.swing.JTextField();
        btnApply = new javax.swing.JButton();
        btnDismiss = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(EDACCGenerateJobsFilter.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtSolverConfigRegex.setText(resourceMap.getString("txtSolverConfigRegex.text")); // NOI18N
        txtSolverConfigRegex.setName("txtSolverConfigRegex"); // NOI18N
        txtSolverConfigRegex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSolverConfigRegexKeyReleased(evt);
            }
        });

        txtInstanceRegex.setText(resourceMap.getString("txtInstanceRegex.text")); // NOI18N
        txtInstanceRegex.setName("txtInstanceRegex"); // NOI18N
        txtInstanceRegex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInstanceRegexKeyReleased(evt);
            }
        });

        btnApply.setText(resourceMap.getString("btnApply.text")); // NOI18N
        btnApply.setName("btnApply"); // NOI18N
        btnApply.setPreferredSize(new java.awt.Dimension(67, 23));
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        btnDismiss.setText(resourceMap.getString("btnDismiss.text")); // NOI18N
        btnDismiss.setName("btnDismiss"); // NOI18N
        btnDismiss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDismissActionPerformed(evt);
            }
        });

        btnReset.setText(resourceMap.getString("btnReset.text")); // NOI18N
        btnReset.setName("btnReset"); // NOI18N
        btnReset.setPreferredSize(new java.awt.Dimension(67, 23));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInstanceRegex, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(txtSolverConfigRegex, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDismiss)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSolverConfigRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtInstanceRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDismiss))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        instanceRegex = txtInstanceRegex.getText();
        solverConfigRegex = txtSolverConfigRegex.getText();
        model.fireTableStructureChanged();
        for (int i = table.getColumnCount() -1; i > 0; i--) {
            TableColumn col = table.getColumnModel().getColumn(i);
            Object value = col.getIdentifier();
            String val;
            if (value instanceof String) {
                val = (String) value;
            } else {
                val = value.toString();
            }
            boolean res = false;
            try {
                res = val.matches(solverConfigRegex);
            } catch (Exception e) {
                res = false;
            }
            if (!res) {
                table.removeColumn(col);
            }
        }
        edacc.experiment.Util.updateTableColumnWidth(table, 10);
        setVisible(false);
    }//GEN-LAST:event_btnApplyActionPerformed

    private void btnDismissActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDismissActionPerformed
        txtInstanceRegex.setText(instanceRegex);
        txtSolverConfigRegex.setText(solverConfigRegex);
        setVisible(false);
    }//GEN-LAST:event_btnDismissActionPerformed

    private void txtSolverConfigRegexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSolverConfigRegexKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            btnApplyActionPerformed(null);
        }
    }//GEN-LAST:event_txtSolverConfigRegexKeyReleased

    private void txtInstanceRegexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInstanceRegexKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
            btnApplyActionPerformed(null);
        }
    }//GEN-LAST:event_txtInstanceRegexKeyReleased

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetFilter();
        btnApplyActionPerformed(null);
    }//GEN-LAST:event_btnResetActionPerformed

    public void resetFilter() {
        txtInstanceRegex.setText(".*");
        txtSolverConfigRegex.setText(".*");
        instanceRegex = ".*";
        solverConfigRegex = ".*";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnDismiss;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtInstanceRegex;
    private javax.swing.JTextField txtSolverConfigRegex;
    // End of variables declaration//GEN-END:variables

    boolean hasFiltersApplied() {
        return !(".*".equals(instanceRegex) && ".*".equals(solverConfigRegex));
    }
}
