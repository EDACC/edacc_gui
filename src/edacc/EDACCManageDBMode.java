/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EDACCManageDBMode.java
 *
 * Created on 03.01.2010, 16:02:23
 */
package edacc;


import edacc.manageDB.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rretz
 */
public class EDACCManageDBMode extends javax.swing.JPanel {

     public ManageDBInstances manageDBInstances;
     public InstanceTableModel instanceTableModel;
     public TableRowSorter<InstanceTableModel> sorter;

     public EDACCManageDBMode(){
        initComponents();
        manageDBInstances = new ManageDBInstances(this, panelManageDBInstances, jFileChooserManageDBInstance );
        instanceTableModel = new InstanceTableModel();
        tableInstances.setModel(instanceTableModel);
        sorter = new TableRowSorter<InstanceTableModel>(instanceTableModel);
     }

     public void addDocumentListener(javax.swing.JTextField tf){
        tf.getDocument().addDocumentListener(
                new DocumentListener() {
                    public void changedUpdate(DocumentEvent e) {
                        manageDBInstances.newFilter(tfInstanceFilterName.getText(), tfInstanceFilterNumAtoms.getText(),
                                tfInstanceFilterNumClauses.getText(), tfInstanceFilterRatio.getText(),
                                tfInstanceFilterMaxClauseLength.getText());
                    }
                    public void insertUpdate(DocumentEvent e) {
                       manageDBInstances.newFilter(tfInstanceFilterName.getText(), tfInstanceFilterNumAtoms.getText(),
                                tfInstanceFilterNumClauses.getText(), tfInstanceFilterRatio.getText(),
                                tfInstanceFilterMaxClauseLength.getText());
                    }
                    public void removeUpdate(DocumentEvent e) {
                        manageDBInstances.newFilter(tfInstanceFilterName.getText(), tfInstanceFilterNumAtoms.getText(),
                                tfInstanceFilterNumClauses.getText(), tfInstanceFilterRatio.getText(),
                                tfInstanceFilterMaxClauseLength.getText());
                    }
                });
     }

     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserManageDBInstance = new javax.swing.JFileChooser();
        manageDBPane = new javax.swing.JTabbedPane();
        panelManageDBSolver = new javax.swing.JPanel();
        panelManageDBInstances = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInstances = new javax.swing.JTable();
        btnAddInstances = new javax.swing.JButton();
        btnRemoveInstances = new javax.swing.JButton();
        btnRefreshTableInstances = new javax.swing.JButton();
        btnSaveInstances = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();
        panelFilter = new javax.swing.JPanel();
        jlInstanceFilterName = new javax.swing.JLabel();
        tfInstanceFilterName = new javax.swing.JTextField();
        tfInstanceFilterNumAtoms = new javax.swing.JTextField();
        jlInstanceFilterNumAtoms = new javax.swing.JLabel();
        jlInstanceFilterNumClauses = new javax.swing.JLabel();
        tfInstanceFilterNumClauses = new javax.swing.JTextField();
        jlInstanceFilterRatio = new javax.swing.JLabel();
        tfInstanceFilterRatio = new javax.swing.JTextField();
        tfInstanceFilterMaxClauseLength = new javax.swing.JTextField();
        jlInstanceFilterMaxClauseLength = new javax.swing.JLabel();

        jFileChooserManageDBInstance.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooserManageDBInstance.setName("jFileChooserManageDBInstance"); // NOI18N

        setName("Form"); // NOI18N

        manageDBPane.setName("manageDBPane"); // NOI18N

        panelManageDBSolver.setName("panelManageDBSolver"); // NOI18N

        javax.swing.GroupLayout panelManageDBSolverLayout = new javax.swing.GroupLayout(panelManageDBSolver);
        panelManageDBSolver.setLayout(panelManageDBSolverLayout);
        panelManageDBSolverLayout.setHorizontalGroup(
            panelManageDBSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 868, Short.MAX_VALUE)
        );
        panelManageDBSolverLayout.setVerticalGroup(
            panelManageDBSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        manageDBPane.addTab("Solvers", panelManageDBSolver);

        panelManageDBInstances.setName("panelManageDBInstances"); // NOI18N
        panelManageDBInstances.setPreferredSize(new java.awt.Dimension(500, 471));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tableInstances.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "numAtoms", "numClauses", "ratio", "maxClauseLength"
            }
        ));
        tableInstances.setName("tableInstances"); // NOI18N
        jScrollPane1.setViewportView(tableInstances);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(EDACCManageDBMode.class);
        tableInstances.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("tableInstances.columnModel.title0")); // NOI18N
        tableInstances.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("tableInstances.columnModel.title1")); // NOI18N
        tableInstances.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("tableInstances.columnModel.title2")); // NOI18N
        tableInstances.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("tableInstances.columnModel.title3")); // NOI18N
        tableInstances.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("tableInstances.columnModel.title4")); // NOI18N

        btnAddInstances.setText(resourceMap.getString("btnAddInstances.text")); // NOI18N
        btnAddInstances.setName("btnAddInstances"); // NOI18N
        btnAddInstances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInstancesActionPerformed(evt);
            }
        });

        btnRemoveInstances.setText(resourceMap.getString("btnRemoveInstances.text")); // NOI18N
        btnRemoveInstances.setName("btnRemoveInstances"); // NOI18N
        btnRemoveInstances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveInstancesActionPerformed(evt);
            }
        });

        btnRefreshTableInstances.setText(resourceMap.getString("btnRefreshTableInstances.text")); // NOI18N
        btnRefreshTableInstances.setName("btnRefreshTableInstances"); // NOI18N
        btnRefreshTableInstances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableInstancesActionPerformed(evt);
            }
        });

        btnSaveInstances.setText(resourceMap.getString("btnSaveInstances.text")); // NOI18N
        btnSaveInstances.setName("btnSaveInstances"); // NOI18N
        btnSaveInstances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveInstancesActionPerformed(evt);
            }
        });

        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        panelFilter.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelFilter.border.title"))); // NOI18N
        panelFilter.setName("panelFilter"); // NOI18N
        panelFilter.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                panelFilterComponentAdded(evt);
            }
        });

        jlInstanceFilterName.setText(resourceMap.getString("jlInstanceFilterName.text")); // NOI18N
        jlInstanceFilterName.setName("jlInstanceFilterName"); // NOI18N

        tfInstanceFilterName.setName("tfInstanceFilterName"); // NOI18N
        tfInstanceFilterName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tfInstanceFilterNameInputMethodTextChanged(evt);
            }
        });

        tfInstanceFilterNumAtoms.setName("tfInstanceFilterNumAtoms"); // NOI18N

        jlInstanceFilterNumAtoms.setText(resourceMap.getString("jlInstanceFilterNumAtoms.text")); // NOI18N
        jlInstanceFilterNumAtoms.setName("jlInstanceFilterNumAtoms"); // NOI18N

        jlInstanceFilterNumClauses.setText(resourceMap.getString("jlInstanceFilterNumClauses.text")); // NOI18N
        jlInstanceFilterNumClauses.setName("jlInstanceFilterNumClauses"); // NOI18N

        tfInstanceFilterNumClauses.setName("tfInstanceFilterNumClauses"); // NOI18N

        jlInstanceFilterRatio.setText(resourceMap.getString("jlInstanceFilterRatio.text")); // NOI18N
        jlInstanceFilterRatio.setName("jlInstanceFilterRatio"); // NOI18N

        tfInstanceFilterRatio.setName("tfInstanceFilterRatio"); // NOI18N

        tfInstanceFilterMaxClauseLength.setName("tfInstanceFilterMaxClauseLength"); // NOI18N

        jlInstanceFilterMaxClauseLength.setText(resourceMap.getString("jlInstanceFilterMaxClauseLength.text")); // NOI18N
        jlInstanceFilterMaxClauseLength.setName("jlInstanceFilterMaxClauseLength"); // NOI18N

        javax.swing.GroupLayout panelFilterLayout = new javax.swing.GroupLayout(panelFilter);
        panelFilter.setLayout(panelFilterLayout);
        panelFilterLayout.setHorizontalGroup(
            panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlInstanceFilterNumAtoms)
                    .addComponent(jlInstanceFilterRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlInstanceFilterMaxClauseLength)
                    .addComponent(jlInstanceFilterName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlInstanceFilterNumClauses, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfInstanceFilterNumClauses, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInstanceFilterName, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInstanceFilterRatio, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInstanceFilterMaxClauseLength, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInstanceFilterNumAtoms, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFilterLayout.setVerticalGroup(
            panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInstanceFilterName)
                    .addComponent(tfInstanceFilterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInstanceFilterNumAtoms)
                    .addComponent(tfInstanceFilterNumAtoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfInstanceFilterNumClauses, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlInstanceFilterNumClauses))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInstanceFilterRatio)
                    .addComponent(tfInstanceFilterRatio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlInstanceFilterMaxClauseLength)
                    .addComponent(tfInstanceFilterMaxClauseLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelManageDBInstancesLayout = new javax.swing.GroupLayout(panelManageDBInstances);
        panelManageDBInstances.setLayout(panelManageDBInstancesLayout);
        panelManageDBInstancesLayout.setHorizontalGroup(
            panelManageDBInstancesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageDBInstancesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelManageDBInstancesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelManageDBInstancesLayout.createSequentialGroup()
                        .addComponent(btnAddInstances)
                        .addGap(10, 10, 10)
                        .addComponent(btnRemoveInstances)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefreshTableInstances)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveInstances))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        panelManageDBInstancesLayout.setVerticalGroup(
            panelManageDBInstancesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManageDBInstancesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelManageDBInstancesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelManageDBInstancesLayout.createSequentialGroup()
                        .addComponent(panelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelManageDBInstancesLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelManageDBInstancesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemoveInstances)
                            .addComponent(btnRefreshTableInstances)
                            .addComponent(btnFilter)
                            .addComponent(btnAddInstances)
                            .addComponent(btnSaveInstances)
                            .addComponent(btnCancel))
                        .addGap(39, 39, 39))))
        );

        manageDBPane.addTab("Instances", panelManageDBInstances);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageDBPane, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageDBPane, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddInstancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInstancesActionPerformed
        manageDBInstances.addInstances();
        tableInstances.updateUI();
    }//GEN-LAST:event_btnAddInstancesActionPerformed

    private void btnRemoveInstancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveInstancesActionPerformed
        manageDBInstances.removeInstances(tableInstances.getSelectedRows());
        tableInstances.updateUI();
    }//GEN-LAST:event_btnRemoveInstancesActionPerformed

    private void btnRefreshTableInstancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableInstancesActionPerformed
        tableInstances.updateUI();
    }//GEN-LAST:event_btnRefreshTableInstancesActionPerformed

    private void btnSaveInstancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveInstancesActionPerformed
        try {
            manageDBInstances.saveInstances();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(panelManageDBInstances,
            "Instances cannot be saved. There is a problem with the Database.",
            "Error",
            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveInstancesActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        if(panelFilter.isVisible())clearFilter();
        else{
            tableInstances.setRowSorter(sorter);
            addDocumentListener(tfInstanceFilterName);
            addDocumentListener(tfInstanceFilterNumAtoms);
            addDocumentListener(tfInstanceFilterNumClauses);
            addDocumentListener(tfInstanceFilterRatio);
            addDocumentListener(tfInstanceFilterMaxClauseLength);
            panelFilter.setVisible(true);
        }
    }//GEN-LAST:event_btnFilterActionPerformed

    private void panelFilterComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_panelFilterComponentAdded
        panelFilter.setVisible(false);
    }//GEN-LAST:event_panelFilterComponentAdded

    private void tfInstanceFilterNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tfInstanceFilterNameInputMethodTextChanged

    }//GEN-LAST:event_tfInstanceFilterNameInputMethodTextChanged

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        instanceTableModel.clearTable();
        clearFilter();
        tableInstances.updateUI();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void clearFilter(){
       if(panelFilter.isVisible()){
           manageDBInstances.removeFilter(tableInstances);
           panelFilter.setVisible(false);
           tfInstanceFilterName.setText("");
           tfInstanceFilterNumAtoms.setText("");
           tfInstanceFilterNumClauses.setText("");
           tfInstanceFilterRatio.setText("");
           tfInstanceFilterMaxClauseLength.setText("");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInstances;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnRefreshTableInstances;
    private javax.swing.JButton btnRemoveInstances;
    private javax.swing.JButton btnSaveInstances;
    private javax.swing.JFileChooser jFileChooserManageDBInstance;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlInstanceFilterMaxClauseLength;
    private javax.swing.JLabel jlInstanceFilterName;
    private javax.swing.JLabel jlInstanceFilterNumAtoms;
    private javax.swing.JLabel jlInstanceFilterNumClauses;
    private javax.swing.JLabel jlInstanceFilterRatio;
    private javax.swing.JTabbedPane manageDBPane;
    private javax.swing.JPanel panelFilter;
    private javax.swing.JPanel panelManageDBInstances;
    private javax.swing.JPanel panelManageDBSolver;
    private javax.swing.JTable tableInstances;
    private javax.swing.JTextField tfInstanceFilterMaxClauseLength;
    private javax.swing.JTextField tfInstanceFilterName;
    private javax.swing.JTextField tfInstanceFilterNumAtoms;
    private javax.swing.JTextField tfInstanceFilterNumClauses;
    private javax.swing.JTextField tfInstanceFilterRatio;
    // End of variables declaration//GEN-END:variables
}
