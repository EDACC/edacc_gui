/*
 * EDACCGridSettingsView.java
 *
 * Created on Nov 26, 2009, 9:34:21 PM
 */

package edacc;

import edacc.model.GridSettingsDAO;
import edacc.model.NoConnectionToDBException;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author Daniel D.
 */
public class EDACCGridSettingsView extends javax.swing.JDialog {

    /** Creates new form EDACCGridSettingsView */
    public EDACCGridSettingsView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNumNodes = new javax.swing.JLabel();
        lblMaxRuntime = new javax.swing.JLabel();
        txtNumNodes = new javax.swing.JTextField();
        txtMaxRuntime = new javax.swing.JTextField();
        lblMaxJobsInQueue = new javax.swing.JLabel();
        txtMaxJobsInQueue = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        lblNumNodes.setLabelFor(txtNumNodes);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(EDACCGridSettingsView.class);
        lblNumNodes.setText(resourceMap.getString("lblNumNodes.text")); // NOI18N
        lblNumNodes.setName("lblNumNodes"); // NOI18N

        lblMaxRuntime.setLabelFor(txtMaxRuntime);
        lblMaxRuntime.setText(resourceMap.getString("lblMaxRuntime.text")); // NOI18N
        lblMaxRuntime.setName("lblMaxRuntime"); // NOI18N

        txtNumNodes.setText(resourceMap.getString("txtNumNodes.text")); // NOI18N
        txtNumNodes.setName("txtNumNodes"); // NOI18N

        txtMaxRuntime.setText(resourceMap.getString("txtMaxRuntime.text")); // NOI18N
        txtMaxRuntime.setName("txtMaxRuntime"); // NOI18N

        lblMaxJobsInQueue.setLabelFor(txtMaxJobsInQueue);
        lblMaxJobsInQueue.setText(resourceMap.getString("lblMaxJobsInQueue.text")); // NOI18N
        lblMaxJobsInQueue.setName("lblMaxJobsInQueue"); // NOI18N

        txtMaxJobsInQueue.setText(resourceMap.getString("txtMaxJobsInQueue.text")); // NOI18N
        txtMaxJobsInQueue.setName("txtMaxJobsInQueue"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getActionMap(EDACCGridSettingsView.class, this);
        btnOk.setAction(actionMap.get("btnOk")); // NOI18N
        btnOk.setText(resourceMap.getString("btnOk.text")); // NOI18N
        btnOk.setName("btnOk"); // NOI18N

        btnCancel.setAction(actionMap.get("btnCancel")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMaxJobsInQueue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(lblNumNodes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaxRuntime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaxRuntime, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(txtNumNodes, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(txtMaxJobsInQueue, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumNodes)
                    .addComponent(txtNumNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxRuntime)
                    .addComponent(txtMaxRuntime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxJobsInQueue)
                    .addComponent(txtMaxJobsInQueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadSettings() throws SQLException {
        txtNumNodes.setText(String.valueOf(GridSettingsDAO.getNumNodes()));
        txtMaxRuntime.setText(String.valueOf(GridSettingsDAO.getMaxRuntime()));
        txtMaxJobsInQueue.setText(String.valueOf(GridSettingsDAO.getMaxJobsInQueue()));
    }

    @Action
    public void btnOk() {
        try {
            int numNodes = Integer.parseInt(txtNumNodes.getText());
            int maxRuntime = Integer.parseInt(txtMaxRuntime.getText());
            int maxJobsInQueue = Integer.parseInt(txtMaxJobsInQueue.getText());
            GridSettingsDAO.saveNumNodes(numNodes);
            GridSettingsDAO.saveMaxJobsInQueue(maxJobsInQueue);
            GridSettingsDAO.saveMaxRuntime(maxRuntime);
            this.setVisible(false);
        }
        catch (NoConnectionToDBException e) {
            JOptionPane.showMessageDialog(this, "Couldn't save settings. No connection to database", "No database connection", JOptionPane.ERROR_MESSAGE);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error while saving settings: \n" + e.getMessage(), "Error saving settings", JOptionPane.ERROR_MESSAGE);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error saving settings, integers expected", "Integers expected", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Action
    public void btnCancel() {
        this.setVisible(false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel lblMaxJobsInQueue;
    private javax.swing.JLabel lblMaxRuntime;
    private javax.swing.JLabel lblNumNodes;
    private javax.swing.JTextField txtMaxJobsInQueue;
    private javax.swing.JTextField txtMaxRuntime;
    private javax.swing.JTextField txtNumNodes;
    // End of variables declaration//GEN-END:variables

}
