/*
 * EDACCExperimentModeGenerateJobs.java
 *
 * Created on 09.04.2011, 18:43:44
 */
package edacc;

import edacc.experiment.Util;

/**
 *
 * @author simon
 */
public class EDACCExperimentModeGenerateJobs extends javax.swing.JDialog {

    private boolean cancelled;
    private int cpuTimeLimit, memoryLimit, wallClockTimeLimit, stackSizeLimit, outputSizeLimit;

    /** Creates new form EDACCExperimentModeGenerateJobs */
    public EDACCExperimentModeGenerateJobs(java.awt.Frame parent, boolean modal, int cpuTimeLimit, int memoryLimit, int wallClockTimeLimit, int stackSizeLimit, int outputSizeLimit) {
        super(parent, modal);
        initComponents();
        txtCPUTimeLimit.setText("" + cpuTimeLimit);
        txtMemoryLimit.setText("" + memoryLimit);
        txtWallClockTimeLimit.setText("" + wallClockTimeLimit);
        txtStackSizeLimit.setText("" + stackSizeLimit);
        txtOutputSizeLimit.setText("" + outputSizeLimit);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCPUTimeLimit = new javax.swing.JTextField();
        txtMemoryLimit = new javax.swing.JTextField();
        txtWallClockTimeLimit = new javax.swing.JTextField();
        txtStackSizeLimit = new javax.swing.JTextField();
        txtOutputSizeLimit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGenerate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(EDACCExperimentModeGenerateJobs.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        txtCPUTimeLimit.setText(resourceMap.getString("txtCPUTimeLimit.text")); // NOI18N
        txtCPUTimeLimit.setToolTipText(resourceMap.getString("txtCPUTimeLimit.toolTipText")); // NOI18N
        txtCPUTimeLimit.setName("txtCPUTimeLimit"); // NOI18N
        txtCPUTimeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCPUTimeLimitKeyReleased(evt);
            }
        });

        txtMemoryLimit.setText(resourceMap.getString("txtMemoryLimit.text")); // NOI18N
        txtMemoryLimit.setToolTipText(resourceMap.getString("txtMemoryLimit.toolTipText")); // NOI18N
        txtMemoryLimit.setName("txtMemoryLimit"); // NOI18N
        txtMemoryLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMemoryLimitKeyReleased(evt);
            }
        });

        txtWallClockTimeLimit.setText(resourceMap.getString("txtWallClockTimeLimit.text")); // NOI18N
        txtWallClockTimeLimit.setName("txtWallClockTimeLimit"); // NOI18N
        txtWallClockTimeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWallClockTimeLimitKeyReleased(evt);
            }
        });

        txtStackSizeLimit.setText(resourceMap.getString("txtStackSizeLimit.text")); // NOI18N
        txtStackSizeLimit.setName("txtStackSizeLimit"); // NOI18N
        txtStackSizeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStackSizeLimitKeyReleased(evt);
            }
        });

        txtOutputSizeLimit.setText(resourceMap.getString("txtOutputSizeLimit.text")); // NOI18N
        txtOutputSizeLimit.setName("txtOutputSizeLimit"); // NOI18N
        txtOutputSizeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOutputSizeLimitKeyReleased(evt);
            }
        });

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMemoryLimit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addComponent(txtWallClockTimeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addComponent(txtStackSizeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addComponent(txtOutputSizeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addComponent(txtCPUTimeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtCPUTimeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel4)
                        .addComponent(txtMemoryLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(6, 6, 6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtWallClockTimeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStackSizeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtOutputSizeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        btnGenerate.setText(resourceMap.getString("btnGenerate.text")); // NOI18N
        btnGenerate.setName("btnGenerate"); // NOI18N
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(230, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerate)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerate)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCPUTimeLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPUTimeLimitKeyReleased
        int ss = txtCPUTimeLimit.getSelectionStart();
        int se = txtCPUTimeLimit.getSelectionEnd();
        int dot = txtCPUTimeLimit.getCaret().getDot();
        txtCPUTimeLimit.setText(Util.getNumberText(txtCPUTimeLimit.getText()));
        txtCPUTimeLimit.getCaret().setDot(dot);
        txtCPUTimeLimit.setSelectionStart(ss);
        txtCPUTimeLimit.setSelectionEnd(se);
}//GEN-LAST:event_txtCPUTimeLimitKeyReleased

    private void txtMemoryLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMemoryLimitKeyReleased
        int ss = txtMemoryLimit.getSelectionStart();
        int se = txtMemoryLimit.getSelectionEnd();
        int dot = txtMemoryLimit.getCaret().getDot();
        txtMemoryLimit.setText(Util.getNumberText(txtMemoryLimit.getText()));
        txtMemoryLimit.getCaret().setDot(dot);
        txtMemoryLimit.setSelectionStart(ss);
        txtMemoryLimit.setSelectionEnd(se);
}//GEN-LAST:event_txtMemoryLimitKeyReleased

    private void txtWallClockTimeLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWallClockTimeLimitKeyReleased
        int ss = txtWallClockTimeLimit.getSelectionStart();
        int se = txtWallClockTimeLimit.getSelectionEnd();
        int dot = txtWallClockTimeLimit.getCaret().getDot();
        txtWallClockTimeLimit.setText(Util.getNumberText(txtWallClockTimeLimit.getText()));
        txtWallClockTimeLimit.getCaret().setDot(dot);
        txtWallClockTimeLimit.setSelectionStart(ss);
        txtWallClockTimeLimit.setSelectionEnd(se);
}//GEN-LAST:event_txtWallClockTimeLimitKeyReleased

    private void txtStackSizeLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStackSizeLimitKeyReleased
        int ss = txtStackSizeLimit.getSelectionStart();
        int se = txtStackSizeLimit.getSelectionEnd();
        int dot = txtStackSizeLimit.getCaret().getDot();
        txtStackSizeLimit.setText(Util.getNumberText(txtStackSizeLimit.getText()));
        txtStackSizeLimit.getCaret().setDot(dot);
        txtStackSizeLimit.setSelectionStart(ss);
        txtStackSizeLimit.setSelectionEnd(se);
}//GEN-LAST:event_txtStackSizeLimitKeyReleased

    private void txtOutputSizeLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOutputSizeLimitKeyReleased
        int ss = txtOutputSizeLimit.getSelectionStart();
        int se = txtOutputSizeLimit.getSelectionEnd();
        int dot = txtOutputSizeLimit.getCaret().getDot();
        txtOutputSizeLimit.setText(Util.getNumberText(txtOutputSizeLimit.getText()));
        txtOutputSizeLimit.getCaret().setDot(dot);
        txtOutputSizeLimit.setSelectionStart(ss);
        txtOutputSizeLimit.setSelectionEnd(se);
}//GEN-LAST:event_txtOutputSizeLimitKeyReleased

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        cancelled = true;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        try {
            cpuTimeLimit = Integer.parseInt(txtCPUTimeLimit.getText());
            memoryLimit = Integer.parseInt(txtMemoryLimit.getText());
            wallClockTimeLimit = Integer.parseInt(txtWallClockTimeLimit.getText());
            stackSizeLimit = Integer.parseInt(txtStackSizeLimit.getText());
            outputSizeLimit = Integer.parseInt(txtOutputSizeLimit.getText());
            cancelled = false;
            this.setVisible(false);
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Expected integers for seed and limits.", "Invalid data", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerateActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCPUTimeLimit;
    private javax.swing.JTextField txtMemoryLimit;
    private javax.swing.JTextField txtOutputSizeLimit;
    private javax.swing.JTextField txtStackSizeLimit;
    private javax.swing.JTextField txtWallClockTimeLimit;
    // End of variables declaration//GEN-END:variables

    public boolean isCancelled() {
        return cancelled;
    }

    public int getCpuTimeLimit() {
        return cpuTimeLimit;
    }

    public int getMemoryLimit() {
        return memoryLimit;
    }

    public int getOutputSizeLimit() {
        return outputSizeLimit;
    }

    public int getStackSizeLimit() {
        return stackSizeLimit;
    }

    public int getWallClockTimeLimit() {
        return wallClockTimeLimit;
    }
}
