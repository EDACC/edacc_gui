/*
 * NumberFilter.java
 *
 * Created on 12.10.2010, 09:56:39
 */
package edacc.filter;

/**
 *
 * @author simon
 */
public class NumberFilter extends javax.swing.JPanel implements FilterInterface {

    /** Creates new form NumberFilter */
    public NumberFilter(String name) {
        initComponents();
        lblName.setText("<= " + name + " <= ");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkActivate = new javax.swing.JCheckBox();
        txtLower = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtUpper = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edacc.EDACCApp.class).getContext().getResourceMap(NumberFilter.class);
        chkActivate.setText(resourceMap.getString("chkActivate.text")); // NOI18N
        chkActivate.setName("chkActivate"); // NOI18N

        txtLower.setText(resourceMap.getString("txtLower.text")); // NOI18N
        txtLower.setName("txtLower"); // NOI18N

        lblName.setText(resourceMap.getString("lblName.text")); // NOI18N
        lblName.setName("lblName"); // NOI18N

        txtUpper.setText(resourceMap.getString("txtUpper.text")); // NOI18N
        txtUpper.setName("txtUpper"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(txtLower, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                .addComponent(chkActivate))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chkActivate)
                .addComponent(txtLower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblName)
                .addComponent(txtUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public boolean include(Object value) {
        if (!chkActivate.isSelected()) {
            return true;
        }
        double hi, lo;
        try {
            lo = Double.parseDouble(txtLower.getText());
            hi = Double.parseDouble(txtUpper.getText());
        } catch (NumberFormatException e) {
            return false;
        }
        if (value instanceof Integer) {
            int val = (Integer) value;
            return lo <= val && val <= hi;
        }
        if (value instanceof Double) {
            double val = (Double) value;
            return lo <= val && val <= hi;
        }
        if (value instanceof Float) {
            float val = (Float) value;
            return lo <= val && val <= hi;
        }
        return true;
    }

    public static boolean accept(Class<?> clazz) {
        return clazz == Integer.class || clazz == Double.class || clazz == Float.class;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkActivate;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextField txtLower;
    private javax.swing.JTextField txtUpper;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean hasFiltersApplied() {
        return chkActivate.isSelected();
    }
}
